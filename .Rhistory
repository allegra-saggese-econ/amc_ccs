`Contracted durability` = col_number()))
# summary statistics on STRIPE data
library(readr)
library(readxl)
library(plm)
library(tidyr)
library(tidyverse)
library(dplyr)
library(survival)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
sum_2 <- stripedf %>% group_by(year) %>%
summarise(sum(offer_quantity)) %>%
as.data.frame()
View(sum_2)
class(stripedf$offer_quantity)
class(stripedf$year)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(mean(offer_quantity)) %>%
as.data.frame()
View(sum_2)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(mean(offer_quantity), na.rm=TRUE) %>%
as.data.frame()
View(sum_2)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(mean(offer_quantity), na.rm=FALSE) %>%
as.data.frame()
View(sum_2)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(mean(offer_quantity))
View(sum_2)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(everything(), .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(price:offer_quantity), .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
View(sum_2)
sum_awarded <- stripedf %>% group_by(year, awarded) %>%
summarise(across(price:offer_quantity, .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
View(sum_awarded)
sum_awarded <- stripedf %>% group_by(awarded) %>%
summarise(across(price:offer_quantity, .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
View(sum_awarded)
#make awarded numeric again
stripedf[,'awarded'] <- as.numeric(stripedf[,'awarded'])
sum_awarded <- stripedf %>% group_by(awarded) %>%
summarise(across(price:offer_quantity, .f = list(mean = mean, max = max, sd = sd), na.rm = TRUE))
View(sum_awarded)
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE))
#make awarded numeric again
stripedf[,'awarded'] <- as.numeric(stripedf[,'awarded'])
sum_1 <- stripedf %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
View(sum_1)
sum_awardonly <- stripedf %>% select(award==1) %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
sum_awardonly <- stripedf %>% select(awarded==1) %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
colnames(stripedf)
sum_awardonly <- stripedf %>% select(awarded==1)
sum_awardonly <- stripedf %>% select(stripedf$awarded==1)
library(readr)
library(readxl)
library(plm)
library(tidyr)
library(tidyverse)
library(dplyr)
library(survival)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#ch
# summary statistics
sum_1 <- stripedf %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
sum_awardonly <- stripedf %>% select(stripedf$awarded==1)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
class(stripedf$awarded)
sum_1 <- stripedf %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
sum_awardonly <- stripedf %>% select(stripedf$awarded==1)
stripedf$awarded <- as.numeric(stripedf$awarded)
sum_awardonly <- stripedf %>% select(stripedf$awarded==1)
rlang::last_trace()
stripedf$awardednum <- as.numeric(stripedf$awarded)
sum_awardonly <- stripedf %>% select(stripedf$awardednum==1)
sum_awardonly <- stripedf %>% select(stripedf$awardednum=1)
sum_awardonly <- stripedf %>% select(stripedf$awarded=1)
sum_awardonly <- stripedf %>% select(stripedf$awarded>0)
class(stripedf$awardednum)
sum_awardonly <- stripedf %>% filter(stripedf$awarded>0)
View(sum_awarded)
View(sum_awardonly)
sum_award_group <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
View(sum_award_group)
tot_award_sum <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE))
View(tot_award_sum)
library(ggplot)
library(ggplot2)
tot_award_sum <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "1")
View(tot_award_sum)
tot_losses_sum <- stripedf %>% filter(stripedf$awarded=0) %>% group_by(year) %>%
tot_losses_sum <- stripedf %>% filter(stripedf$awarded==0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "0")
View(tot_losses_sum)
#combine tot_award_sum
rbind(tot_award_sum, tot_losses_sum)
#combine tot_award_sum
summary_join <- left_join(tot_award_sum, tot_losses_sum)
View(summary_join)
#combine tot_award_sum
summary_join <- full_join(tot_award_sum, tot_losses_sum)
View(summary_join)
library(rstatix)
library(ggpubr)
install.packages("ggpubr")
library(readr)
library(readxl)
library(plm)
library(tidyr)
library(tidyverse)
library(dplyr)
library(survival)
library(ggplot2)
library(ggpubr)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
# ggplot
ggsummarystats(stripedf, x="price", y = "offer_quantity", color="awarded")
ggplot(data=summary_join, aes(x=price_mean, y=year))
ggplot(data=summary_join, aes(x=price_mean, y=year))+ geom_point()
ggplot(data=stripedf, aes(x=price, y=year))+ geom_point()
ggplot(data=stripedf, aes(x=year, y=price))+ geom_point()
plotdata <- stripedf %>% filter(price>10000000)
plotdata <- stripedf %>% filter(price<1000000)
ggplot(data=plotdata, aes(x=year, y=price))+ geom_point()
ggplot(data=plotdata, aes(x=year, y=price))+ geom_boxplot()
ggplot(data=plotdata, aes(x=year, y=price))+ geom_point()
ggplot(data=plotdata, aes(x=year, y=price))+ geom_histogram(bins=20)
ggplot(data=plotdata, aes(x=price))+ geom_histogram(bins=20)
price_histo <- ggplot(data=plotdata, aes(x=price))+ geom_histogram(bins=20)
price_histo_winners <- ggplot(data=stripedf %>% filter(stripedf$awarded>0), aes(x=price))+ geom_histogram(bins=20)
award_onlydf <- stripedf %>% filter(stripedf$awarded>0)
award_onlydf <- stripedf %>% select(stripedf$awarded>0)
award_onlydf <- stripedf %>% subset(stripedf$awarded>0)
stripedf$awardednum <- as.numeric(stripedf$awarded)
award_onlydf <- stripedf %>% subset(stripedf$awarded>0)
award_onlydf <- stripedf %>% subset(stripedf$awardednum>0)
stripedf$awardednum <- as.numeric(stripedf$awarded)
award_onlydf <- stripedf %>% subset(stripedf$awardednum>0)
award_onlydf <- stripedf %>% filter(stripedf$awardednum>0)
award_onlydf <- stripedf %>% select(stripedf$awardednum>0)
View(stripedf)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
stripedf$awardednum <- as.numeric(stripedf$awarded)
award_onlydf <- stripedf %>% filter(awarded>0)
prop_onlydf <- stripedf %>% filter(awarded=0)
prop_onlydf <- stripedf %>% filter(awarded==0)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=price))+ geom_histogram(bins=20)
price_histo_losers <- ggplot(data=prop_onlydf, aes(x=price))+ geom_histogram(bins=20)
plotdata <- stripedf %>% filter(price<1000000)
ggplot(data=plotdata, aes(x=year, y=price))+ geom_point()
price_histo <- ggplot(data=plotdata, aes(x=price))+ geom_histogram(bins=20)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=price))+ geom_histogram(bins=20)
price_histo_losers <- ggplot(data=prop_onlydf, aes(x=price))+ geom_histogram(bins=20)
View(price_histo_winners)
View(price_histo_losers)
View(award_onlydf)
colnames(prop_onlydf)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=award_only$price))+ geom_histogram(bins=20)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=award_onlydf$price))+ geom_histogram(bins=20)
price_histo_losers <- ggplot(data=prop_onlydf, aes(x=prop_onlydf$price))+ geom_histogram(bins=20)
price_histo_losers
price_histo_winners
price_histo
ggplot(award_onlydf, aes(x = award_onlydf$price, y = award_onlydf$offer_quantity)) + geom_point()
ggplot(prop_onlydf, aes(x = prop_onlydf$price, y = prop_onlydf$offer_quantity)) + geom_point()
plotdata <- stripedf %>% filter(price<1000000) %>% filter(offer_quantity<100000000)
ggplot(plotdata, aes(x = pplotdata$price, y = plotdata$offer_quantity)) + geom_point()
plotdata <- stripedf %>% filter(price<1000000) %>% filter(offer_quantity<100000000)
ggplot(plotdata, aes(x = plotdata$price, y = plotdata$offer_quantity)) + geom_point()
plotdata <- stripedf %>% filter(price<1000000) %>% filter(offer_quantity<10000000)
ggplot(plotdata, aes(x = plotdata$price, y = plotdata$offer_quantity)) + geom_point()
fine_tune <- stripedf %>% filter(price<100000) %>% filter(offer_quantity<1000000)
ggplot(fine_tune, aes(x = fine_tune$price, y = fine_tune$offer_quantity)) + geom_point()
fine_tune <- stripedf %>% filter(price<10000) %>% filter(offer_quantity<100000)
ggplot(fine_tune, aes(x = fine_tune$price, y = fine_tune$offer_quantity)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = price)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = offer_quantity)) + geom_point()
View(summary_join)
View(tot_award_sum)
View(tot_losses_sum)
View(sum_1)
View(sum_2)
View(stripedf)
save.image("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/.RData")
library(tidyr)
library(dplyr)
library(ggplot2)
library(readr)
library(sqldf)
library(R.utils)
library(RSQLite)
setwd("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/PATSTAT")
temp = list.files(pattern="\\.csv$")
data.table.timing <- system.time(allData <- freadr(file, showProgress=TRUE)) # test the time to read in the PATSTAT
data.table.timing <- system.time(allData <- fread(file, showProgress=TRUE)) # test the time to read in the PATSTAT
data.table.timing <- system.time(allData <- read_csv(file, showProgress=TRUE)) # test the time to read in the PATSTAT
file1 = paste0(getwd(), "/tls226_part02.csv")
df <- read.csv.sql(file1,
sql = "SELECT * FROM file",
dbname = tempfile(),
header = TRUE)
tempfile()
custom_directory <- "C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/PATSTAT/temps" #custom directory for tempfiles
custom_tempfile <- tempfile(tmpdir = custom_directory)
sutom_tempfile
custom_tempfile
df <- read.csv.sql(file1,
sql = "SELECT * FROM file",
dbname = custom_tempfile,
header = TRUE)
custom <- file.path(custom_directory, tempfile())
custom
custom <- file.path(custom_directory, "bob.csv")
custom
df <- read.csv.sql(file1,
sql = "SELECT * FROM file",
dbname = custom,
header = TRUE)
if (file.exists(custom_tempfile)) {
tryCatch(
{
unlink(custom_tempfile)
},
warning = function(w) {
message("Permission issue: ", w)
},
error = function(e) {
message("Error occurred: ", e)
}
)
}
custom_tempfile
if (file.exists(custom)) {
tryCatch(
{
unlink(custom_tempfile)
},
warning = function(w) {
message("Permission issue: ", w)
},
error = function(e) {
message("Error occurred: ", e)
}
)
}
df <- read.csv.sql(file1,
sql = "SELECT * FROM file",
dbname = custom,
header = TRUE)
file1 = paste0(getwd(), "/tls226_part02.csv")
custom <- file.path(custom_directory, "bob.csv")
df <- read.csv.sql(file1,
sql = "SELECT * FROM file",
dbname = custom,
header = TRUE)
custom <- file.path(custom_directory, "bob.csv")
df <- read.csv.sql(file1,
sql = "SELECT * FROM file1",
dbname = custom,
header = TRUE)
library(tidyverse)
# summary statistics on STRIPE data
library(readr)
library(readxl)
library(plm)
library(tidyr)
library(tidyverse)
library(dplyr)
library(survival)
library(ggplot2)
library(ggpubr)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor
# summary statistics on STRIPE data
library(readr)
library(readxl)
library(plm)
library(tidyr)
library(tidyverse)
library(dplyr)
library(survival)
library(ggplot2)
library(ggpubr)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
no_control
View(stripedf)
stripedf$price <- as.numeric(as.character(stripedf$price))
#change awarded to factor var for regression
stripedf[,'awarded'] <- as.factor(stripedf[,'awarded'])
# test logit regressions
no_control <- glm(formula = awarded ~ price, data = stripedf, family = binomial(link="logit"))
class(stripedf$awarded)
class(stripedf$price)
str(stripedf)
summary(stripedf)
stripedf <- read_excel("C:/Users/SAGGESE/Documents/GitHub/amc_ccs/data/stripe_data/cleaned_outputs/manual-aggregated-firmlist.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "text", "text",
"numeric", "numeric", "numeric",
"text", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric"))
stripedf$price <- as.numeric(as.character(stripedf$price))
summary(stripedf)
#change awarded to factor var for regression
stripedf$awarded_factor <- as.factor(stripedf$awarded)
summary(stripedf)
no_control <- glm(formula = awarded_factor ~ price, data = stripedf, family = binomial(link="logit"))
summary(no_control) # no impact of price
stripedf$realised_cost_decrease <- (stripedf$current_cost_per_tonne-stripedf$price) # create var for difference in cost
stripedf$realised_cost_decrease <- (stripedf$current_cost_per_tonne-stripedf$price)*(-1) # create var for difference in cost
diff_realised_price <- glm(formula = awarded ~ (realised_cost_decrease) + year, data = stripedf, family = binomial(link="logit"))
summary(diff_realised_price)
diff_2 <- glm(formula = awarded ~ (realised_cost_decrease) + year + offer_quantity, data = stripedf, family = binomial(link="logit"))
summary(diff_2)
long_reg <- glm(formula = awarded ~ price + offer_quantity + price*offer_quantity + year, data = stripedf, family = binomial(link="logit"))
summary(long_reg)
# summary statistics
sum_1 <- stripedf %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
stripedf$awardednum <- as.numeric(stripedf$awarded)
award_onlydf <- stripedf %>%
filter(awarded>0)
prop_onlydf <- stripedf %>% filter(awarded==0)
sum_award_group <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
tot_award_sum <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "1")
tot_losses_sum <- stripedf %>% filter(stripedf$awarded==0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "0")
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE))
#combine tot_award_sum
summary_join <- full_join(tot_award_sum, tot_losses_sum)
# ggplot
#ggsummarystats(stripedf, x="price", y = "offer_quantity", color="awarded")
plotdata <- stripedf %>% filter(price<1000000) %>% filter(offer_quantity<10000000)
fine_tune <- stripedf %>% filter(price<10000) %>% filter(offer_quantity<100000)
ggplot(data=plotdata, aes(x=year, y=price))+ geom_point()
price_histo <- ggplot(data=plotdata, aes(x=price))+ geom_histogram(bins=20)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=award_onlydf$price))+ geom_histogram(bins=20)
price_histo_losers <- ggplot(data=prop_onlydf, aes(x=prop_onlydf$price))+ geom_histogram(bins=20)
ggplot(award_onlydf, aes(x = award_onlydf$price, y = award_onlydf$offer_quantity)) + geom_point()
ggplot(fine_tune, aes(x = fine_tune$price, y = fine_tune$offer_quantity)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = price)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = offer_quantity)) + geom_point()
#make awarded numeric again
stripedf[,'awarded'] <- as.numeric(stripedf[,'awarded'])
no_control <- glm(formula = awarded_factor ~ price, data = stripedf, family = binomial(link="logit"))
summary(no_control) # no impact of price
stripedf$realised_cost_decrease <- (stripedf$current_cost_per_tonne-stripedf$price)*(-1) # create var for difference in cost
diff_realised_price <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year, data = stripedf, family = binomial(link="logit"))
summary(diff_realised_price)
diff_2 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + offer_quantity, data = stripedf, family = binomial(link="logit"))
summary(diff_2)
diff_3 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + 'lifetime mtc02e', data = stripedf, family = binomial(link="logit"))
colnames(stripedf)
diff_3 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + "lifetime mtco2e", data = stripedf, family = binomial(link="logit"))
diff_3 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + stripedf$`lifetime mtco2e`, data = stripedf, family = binomial(link="logit"))
summary(diff_3)
no_control <- glm(formula = awarded_factor ~ price, data = stripedf, family = binomial(link="logit"))
summary(no_control) # no impact of price
stripedf$realised_cost_decrease <- (stripedf$current_cost_per_tonne-stripedf$price)*(-1) # create var for difference in cost
diff_realised_price <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year, data = stripedf, family = binomial(link="logit"))
summary(diff_realised_price)
diff_2 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + offer_quantity, data = stripedf, family = binomial(link="logit"))
summary(diff_2)
diff_3 <- glm(formula = awarded_factor ~ (realised_cost_decrease) + year + stripedf$`lifetime mtco2e`, data = stripedf, family = binomial(link="logit"))
summary(diff_3)
long_reg <- glm(formula = awarded_factor ~ price + offer_quantity + price*offer_quantity + year, data = stripedf, family = binomial(link="logit"))
summary(long_reg)
# summary statistics
sum_1 <- stripedf %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
stripedf$awardednum <- as.numeric(stripedf$awarded)
award_onlydf <- stripedf %>%
filter(awarded>0)
prop_onlydf <- stripedf %>% filter(awarded==0)
sum_award_group <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(total_count=n(),.groups='drop') %>%
as.data.frame()
tot_award_sum <- stripedf %>% filter(stripedf$awarded>0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "1")
tot_losses_sum <- stripedf %>% filter(stripedf$awarded==0) %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE)) %>%
mutate(awarded <- "0")
sum_2 <- stripedf %>% group_by(year) %>%
summarise(across(price:offer_quantity, .f = list(sum = sum, mean = mean, max = max, sd = sd), na.rm = TRUE))
#combine tot_award_sum
summary_join <- full_join(tot_award_sum, tot_losses_sum)
# ggplot
#ggsummarystats(stripedf, x="price", y = "offer_quantity", color="awarded")
plotdata <- stripedf %>% filter(price<1000000) %>% filter(offer_quantity<10000000)
fine_tune <- stripedf %>% filter(price<10000) %>% filter(offer_quantity<100000)
ggplot(data=plotdata, aes(x=year, y=price))+ geom_point()
price_histo <- ggplot(data=plotdata, aes(x=price))+ geom_histogram(bins=20)
price_histo_winners <- ggplot(data=award_onlydf, aes(x=award_onlydf$price))+ geom_histogram(bins=20)
price_histo_losers <- ggplot(data=prop_onlydf, aes(x=prop_onlydf$price))+ geom_histogram(bins=20)
ggplot(award_onlydf, aes(x = award_onlydf$price, y = award_onlydf$offer_quantity)) + geom_point()
ggplot(fine_tune, aes(x = fine_tune$price, y = fine_tune$offer_quantity)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = price)) + geom_point()
ggplot(award_onlydf, aes(x = year, y = offer_quantity)) + geom_point()
#make awarded numeric again
stripedf[,'awarded'] <- as.numeric(stripedf[,'awarded'])
